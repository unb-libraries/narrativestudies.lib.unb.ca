<?php

/**
 * @file
 * Contains ns_author.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info().
 */
function ns_author_entity_base_field_info(EntityTypeInterface $entity_type) {
  // Add text author field to bibcite_reference.
  if ($entity_type->id() === 'bibcite_reference') {
    $fields['text_author'] = BaseFieldDefinition::create('text')
      ->setLabel(t('Text Author'))
      ->setTranslatable(TRUE);
    return $fields;
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function ns_author_bibcite_reference_presave($entity) {
  // Generate text author on entity save.
  $authors = $entity->get('author')->getValue();
  $aut_names = '';

  foreach ($authors as $author) {
    $aid = $author['target_id'];
    $aut_storage = \Drupal::entityManager()->getStorage('bibcite_contributor');
    $author = $aut_storage->load($aid);
    $aut_names = $aut_names . ' ' . $author->getName();
  }

  unset($author);
  unset($authors);

  $entity->get('text_author')->setValue($aut_names);
}
